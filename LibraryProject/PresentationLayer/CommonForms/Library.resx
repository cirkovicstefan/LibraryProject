<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonBooks.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        uwAAAbsBOuzj4gAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAhUSURBVHhe5ZsF
        jCRFFIYPd3fncHd3DeQOgru7ewgeHALBXRKcECRYILi7uweHICG42/F9Q9dRW1Mz07s7fbcz/MmX7al+
        3dP1trrq1auaQcOGDet40OiwMTwCb8JUObsc2cJOAU0Jh8MnYEFgk5x9jmzhQActAlfAbxAq/SV8Wxxv
        mrsuR7ZwoIIWhJuLSgY+hn1gXHixKOsuB6B54Hr4G0LF34EdYczIrrscgAbD1fAXWCCvwOYwWsa+OxyA
        JoAT4FewQJ6CdWCU3DWCOtsBaFTYHj4DC8ShbbWcfQoacQ5Ao8A0MC8sBavD+rAN7An7F8drwsIwae4+
        AbQQPAd+kA9go5xtI1D7HYDGg5VgXzgbboc34BfQoCx2YK/BhWDQMnbyPf6nPfgJjoAe58uA+u8ANAZs
        Bz7oS/AneKIV38P78CzcBTcVx19Dzv4bOA/mKr53CPjeT5c+U1lQDwegxeFWOBd8teo7zrqCfx/Cg5gf
        wP/QWbAzrAcrgM1/ahg+FOVAE4PByyZwOYSARWzqY+SuawaaBaZIylIHHF18Dhwb29ds6goGDbqzML4N
        NoM5YdTUrj+gMWED8INMnLNLQbZOX58HwYLXk/OpA/yebcEWacGdsX3Npq7gPwfsmp5rJ8hW4YE0dQCa
        Ho6BeHQwNjg9scv2AWjXoryzHIAMfa+DuB+yTzkVZs3Yd4cD0KJgzB+HvnbIO8G4sW0M6r0DkDH2E1Dr
        IdFIdQByuA3l4vOsGF/bCFTKAWg0sM7WffgXzVScHNkOOBR8vx2+Fo+vaQUq64CZis+1D+Fg5uLkQHgF
        Jog/xyBHgk3Bnv3U5FxZB8xcfK59CAelHYAmhOVgdzgDLgE7qzvAeMFo8QI4DLaGFaHHJAa17ARj0Axw
        HHwO4brXEpvqHIDGB4MYo71wTW84IrlfKQegVcAOMR4JvoKTYOrEtlIHOCTFD2EK6h4wOnSMPhB2gS1h
        bzgFrgU7G+cA6yT3a+oA5CTq8eJ8wMmSYXp2noCqfQXQkuCDTZOe6y2oUSc4PzxdlItOvwaWjq/PgUZM
        H9AOUCMHmAHywISnE7JZ4uuagbrCAVOASc5pY/sYZIzvhGyxpHzEOgCNBXPBEmBnZcpqC1gbTHBMlrtO
        UKlOMAY5fjtb/QIs+Cg5X3kfsAwcBDbTV+EPCNc34mdwtWb15F6lHIDMPNnvGBjFyVGdsGNiW50DkPF5
        sI0xcemI8C68AI/C6/AjxHZHJ/dr6gDkcpdT2bcg2MljYFa4LgeBKnXA2GBw49DmcpTN3aREsyztJODw
        uSyMlZxr1Af4fu8GJkrCedNkF8NC8T1SUFd0gqdH5abNjoJJ4msbgbrCAWZ8TLo6KZowviYG1bU81PkO
        aAWaHWwlto67k3PVOwA5TjvkOVb7Xj4EfvF7YIz+e/H3eTAzfCY4x58ouU9pByAXTNYCny1Oktyb2FXn
        AOQiiMNZsO8tpyX3a+kA5ATsANC5wVYeBqfEPbLJqFIH2OOHAMQNCU59Twbz7a4IuTLkXGE+MGXupOgQ
        OB+uhAWT+zV0QHHOkcaWFGwcVh2F5o9tY1C1rwCaFEr1yK1AWQcgh9fvinL5CHzderxCOVD1fUC7QI0c
        4H/ZA5u9SdCmiy4xqCscYMLSDNLosX0MmhtMiGyRlI84ByDX8J0bGK6aAHHcPhFcQDV15RLaGuDD1qWy
        UcM+IAcyNN4Q7odw3aeJTaWdoP+Z/cChzbg/Ho5a4SRm2+R+pRyAHH2MBj+FYO93mxRdMrGt1AHuAQi2
        ATsrd254jXOEi8BVG5Ok94ITGWeDPvBeyf2aOgDNCK4ex7tE/D7jijlS++Kaal8BtAM4tBmU1NYRyoB6
        TISKskZ9gIGWjjSgCufNKTpBGj++Rwrqik7Q1hPKTYKuCw1nnDGoKxxgdslNkENi+zKgkeMA5BzeIMmU
        lZsmXM6u240Rg0p1gmVARp43QEjbb5icb1sfMDk4tLkGcBW8DHEnFWO6zEUUJ0uXwZzJvfrlAGSCxj4p
        /NcDZqTS5Ev/HYCchqZprhxmb3JDZLqO1ycHIJfIjDfieYIbtpxvrNDgmrY4wJ3Zz8CH4PYZH8LcnFvg
        vKHpr7DEbrZ4NlgZ3Cq3F/RYTEG9cgBaHlzOjlen3DPglrym16PO6QQTG/MAW4HJ1mDr8OhIsUTumhyo
        8xyAHP5MvQcbm/k5MENq2wrUOQ5AvjZPFuViv+NCa5/XI9HAdwC47nB3VObexONh8tz1vQENeAfYqYaR
        w07OnEDp3/20Ag14BwRc/po7Z98f0IB0gENl2EfsfoBSO8H6AqrGAcid5AYmLn/Zebn91TSWC6jO4U2Y
        utNcm7rttsgYwhR7bpHDzVCzwqpgxOf9DgYTLSZGvM4VaO89Xnp9DOq7A5CboUP4a7Rl6OmW1fgXW2XQ
        3vyACRXH9uGrPsjx3uySS9+mvP0hVLwSXAbv73MZertwYlba3xp57z45wKyPq77hfI7wpVbMrfGmq24B
        5wmXgkkRk5u5ZXTH9RtBp8ZhbYxBj89xH3g/bb3/A+BU+W1w11izZXqHUTPLHt+Rc0DwdG3vLUp/lmbv
        bAWt1JHgtjfDUmd8pXaRI/N5/gDKtQMzRvHKb0CHuNZgCtz7Z1+bHMj7G3rbUvcAW4AtIf1Rx82Fva+W
        B9a9tpbvh6HFSaeWxtxW1o0JbVkHSEF+jwfidpdxcnb9AdnR6kz3K9p6linKh4IH1r02VfWDGxzb+ruA
        ZqBsJFg1yD7BuvrButeaplGXBZ7QOzYR35MqWQCCAzzO2bQT62TdQuWt8+DgFdf2ghP+D1jX9Wt1j5qG
        LcEm4XvR2yGoE7BO1s06Dv633sMG/QOxmkMwK/JDzgAAAABJRU5ErkJggg==
</value>
  </data>
</root>